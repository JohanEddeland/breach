close all;
clear;
clc;
warning('OFF', 'ALL')

addpath('/Users/thaodang/SDT/SDT/Functions')
addpath('/Users/thaodang/SDT/SDT/ExampleBand-Pass')
addpath('/Users/thaodang/SDT/SDT/ExampleLow-Pass')
addpath('/Users/thaodang/SDT/SDT/periodic.signals')
addpath('/Users/thaodang/breach-dev')
        
InitBreach
BP2param

model_name = 'BP2_in';

%rng(15000,'twister');
BrSD = BreachSimulinkSystem(model_name);
%, 'all', [], {}, [], 'Verbose',0,'SimInModelsDataFolder', true); 


for sigId = 2:2
    if (sigId < 10)
        sigfilename = strcat('s_0', num2str(sigId));
    else
        sigfilename = strcat('s_', num2str(sigId));
    end
    
    A = load(sigfilename, '-ascii');
    time = A(:,1)'
    time = 1e-7*time;
    sz = size(time);
    sim_time = time(sz(1))
   
    
    p0 = A(:,2)
    sz = size(A);
    mysig= fixed_cp_signal_gen({'InSig'}, sz(1), 'linear', p0);
    %mysig1= cp_signal_gen({'InSig'}, sz(1), 'linear', p0)
    
    In1 = [ p0' ] 
    save('sMat.mat', 'time', 'In1');
    sg_in = from_file_signal_gen({'In1'}, 'sMat.mat', 'In1')
    
    
   
    
    BrSD_temp=BrSD.copy();
    BrSD_temp.SetInputGen({sg_in});
    
    
    BrSD.SetTime([0 sim_time]);
    phi = STL_Formula('saturation', 'alw_[0.1, sim_time] (Out1[t] < 0.1)'); 
    phi = set_params(phi, {'sim_time'}, [sim_time]);
   

    BrSD_temp.Sim();
    BrSD_temp.PlotSignals({'In1', 'Out1'});
    input('Press ENTER to continue');
     
    rob = BrSD_temp.CheckSpec(phi);
    if rob<0 
                   disp('Falsified in StatFalsify');
                   new_fig = gcf;
                   BrSD.PlotSignals;
                   falsified = true;
                   return;
    end

end
    
               
